name: Deploy Backend to EC2

on:
  push:
    branches: [master]

jobs:
  check-commit:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'DEPLOY')
    steps:
      - uses: actions/checkout@v3

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          cat >>~/.ssh/config <<END
          Host ec2
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          END

      - name: Deploy Backend to EC2
        run: |
          ssh ec2 'cd /home/ec2-user/apps/backend/aicity-backend && \
          git pull origin master && \
          # Stop and remove any containers with this name (force removal)
          echo "Cleaning up existing containers..." && \
          docker stop aicity-backend || true && \
          docker rm -f aicity-backend || true && \
          sleep 2 && \
          # Double check no container exists
          docker ps -a | grep aicity-backend && docker rm -f aicity-backend || true && \
          sleep 2 && \
          # Remove old images
          echo "Cleaning up old images..." && \
          docker image prune -f && \
          # Build and run new container
          echo "Building new image..." && \
          docker build -t aicity-backend . && \
          echo "Starting new container..." && \
          for i in 1 2 3; do \
            echo "Attempt $i to start container..." && \
            docker rm -f aicity-backend || true && \
            sleep 2 && \
            if docker run --name aicity-backend --network aicity-network -p 3001:3001 -p 3002:3002 --env-file .env -d aicity-backend; then \
              echo "Container started successfully" && break; \
            else \
              echo "Attempt $i failed, cleaning up..." && \
              sleep 2; \
            fi; \
            if [ $i -eq 3 ]; then \
              echo "All attempts failed" && exit 1; \
            fi \
          done'
